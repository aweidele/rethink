* {
  border: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  font-family: 'Source Sans Pro', sans-serif;
}

body.bg_yellow {
  background-color: #FFDA00;
}

body.bg_blue {
  background-color: #00B7F1;
}

body.bg_red {
  background-color: #EE202E;
}

body.bg_gray_10 {
  background-color: #E8E5E2;
}

body.bg_gray_50 {
  background-color: #898C8E;
}

body.bg_gray_90 {
  background-color: #434345;
}

body.bg_white {
  background-color: #FFFFFF;
}

body.bg_black {
  background-color: #000000;
}

.background_image {
  width: 100%;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 0;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

a, a:after {
  -webkit-transition: all 0.25s;
  transition: all 0.25s;
}

.header {
  width: 100%;
  height: 80px;
  background: #000000;
  position: fixed;
  z-index: 99998;
}

@media screen and (min-width: 768px) {
  .header {
    height: 93px;
  }
}

@media screen and (min-width: 1024px) {
  .header {
    height: 108px;
  }
}

.header_inner {
  width: 100%;
  max-width: 1440px;
  margin-right: auto;
  margin-left: auto;
  padding: 0 20px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.header_inner img {
  display: block;
}

.header_inner img.alignleft {
  float: left;
}

.header_inner img.alignright {
  float: right;
}

.header_inner img.aligncenter {
  display: block;
  margin: auto;
}

.header_logo {
  width: 130px;
  padding: 25px 0;
}

@media screen and (min-width: 768px) {
  .header_logo {
    width: 180px;
  }
}

@media screen and (min-width: 1024px) {
  .header_logo {
    width: 243px;
  }
}

.header_logo svg {
  width: 100%;
  height: auto;
  display: block;
}

.header_logo .logo_re {
  fill: #E8E5E2;
  -webkit-transition: fill 0.5s;
  transition: fill 0.5s;
}

.header_logo .logo_think {
  fill: #FFDA00;
  -webkit-transition: fill 0.5s;
  transition: fill 0.5s;
}

.header_logo a:hover .logo_re,
.header_logo a:hover .logo_think {
  fill: #FFFFFF;
}

.header_logo span {
  position: absolute;
  left: -999999px;
}

.main_nav {
  -webkit-transition: opacity 0.25s, -webkit-transform 0.25s;
  transition: opacity 0.25s, -webkit-transform 0.25s;
  transition: transform 0.25s, opacity 0.25s;
  transition: transform 0.25s, opacity 0.25s, -webkit-transform 0.25s;
}

.main_nav ul {
  list-style: none;
}

.main_nav a {
  position: relative;
  color: #FFFFFF;
  display: inline-block;
  text-decoration: none;
}

.main_nav a:after {
  width: 100%;
  height: 0px;
  position: absolute;
  left: 0;
  bottom: -6px;
  content: "";
  background: #FFFFFF;
  display: block;
  -webkit-transition: height 0.25s linear;
  transition: height 0.25s linear;
}

.main_nav a:hover:after {
  height: 3px;
}

.main_nav li {
  font-size: 1.125rem;
  letter-spacing: 0.075em;
  font-weight: 600;
  padding: 0 16px;
}

@media screen and (min-width: 768px) {
  .main_nav li {
    font-size: 1.3125rem;
  }
}

.main_nav li:last-child {
  padding-right: 0;
}

.main_nav li.current-menu-item a:after {
  height: 3px;
  background: #FFDA00;
}

@media screen and (min-width: 768px) {
  .main_nav ul {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}

@media screen and (min-width: 1024px) {
  .main_nav li {
    padding: 0 28px;
  }
  .main_nav a:after {
    bottom: -9px;
  }
  .main_nav a:hover:after,
  .main_nav li.current-menu-item a:after {
    height: 5px;
  }
}

@media screen and (max-width: 767px) {
  .main_nav {
    width: 100%;
    height: calc(100vh - 80px);
    position: fixed;
    top: 80px;
    right: 0;
    background: #434345;
    opacity: 0;
    padding: 20px;
    -webkit-transform: translateX(100%);
            transform: translateX(100%);
    z-index: 9990;
  }
  .menu_toggle.expanded + .main_nav {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
  .main_nav li {
    font-size: 1.5rem;
    padding: 0;
    text-align: center;
  }
  .main_nav a {
    width: 100%;
    padding: 0.4em 0;
  }
  .main_nav a:hover,
  .main_nav li.current-menu-item a {
    color: #FFDA00;
  }
  .main_nav a:hover:after,
  .main_nav li.current-menu-item a:after {
    display: none;
  }
}

.menu_toggle {
  width: 80px;
  height: 80px;
  position: relative;
  cursor: pointer;
  background-color: transparent;
  border: 0;
  overflow: hidden;
  text-indent: -999999px;
}

.menu_toggle, .menu_toggle:focus, .menu_toggle:active {
  outline: none;
}

.menu_toggle:after, .menu_toggle:before {
  content: "";
}

.menu_toggle i, .menu_toggle:after, .menu_toggle:before {
  width: 32px;
  height: 3px;
  position: absolute;
  top: 39px;
  right: 0px;
  background: #FFFFFF;
  display: block;
  -webkit-transition: all 0.25s;
  transition: all 0.25s;
}

.menu_toggle:after {
  -webkit-transform: translateY(12px);
          transform: translateY(12px);
}

.menu_toggle:before {
  -webkit-transform: translateY(-12px);
          transform: translateY(-12px);
}

.menu_toggle.expanded i {
  -webkit-transform: translateX(32px);
          transform: translateX(32px);
  opacity: 0;
}

.menu_toggle.expanded:after {
  -webkit-transform: translateY(0) rotate(-45deg);
          transform: translateY(0) rotate(-45deg);
}

.menu_toggle.expanded:before {
  -webkit-transform: translateY(0) rotate(45deg);
          transform: translateY(0) rotate(45deg);
}

@media screen and (min-width: 768px) {
  .menu_toggle {
    display: none;
  }
}

.content_main {
  position: relative;
  z-index: 100;
  padding-top: 80px;
}

@media screen and (min-width: 768px) {
  .content_main {
    padding-top: 93px;
  }
}

@media screen and (min-width: 1024px) {
  .content_main {
    padding-top: 108px;
  }
}

.content_wrapper {
  width: 100%;
  max-width: 1440px;
  margin-right: auto;
  margin-left: auto;
  padding: 0 20px;
  margin-top: 15px;
  margin-bottom: 15px;
}

.content_wrapper img {
  display: block;
}

.content_wrapper img.alignleft {
  float: left;
}

.content_wrapper img.alignright {
  float: right;
}

.content_wrapper img.aligncenter {
  display: block;
  margin: auto;
}

.content_medium, .content_wide {
  width: 100%;
  max-width: 980px;
  background: rgba(255, 255, 255, 0.9);
  padding: 20px;
}

.content_wide {
  max-width: 1440px;
}

@media screen and (min-width: 768px) {
  .content_row.two_column_row {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
  }
  .content_row.two_column_row .content_col:first-child {
    width: 52%;
    padding-right: 20px;
  }
  .content_row.two_column_row .content_col:last-child {
    width: 48%;
  }
}

.block_image {
  margin-bottom: 1em;
}

.block_image_figure img {
  width: 100%;
  height: auto;
  display: block;
}

.block_image_figure figcaption {
  font-size: 0.875rem;
  padding: 0.2em 0;
}

.block_text h2 {
  font-size: 1.125rem;
  margin-bottom: 1em;
}

@media screen and (min-width: 768px) {
  .block_text h2 {
    font-size: 1.3125rem;
  }
}

.block_text h2 a {
  color: #000000;
  text-decoration: none;
}

.block_text h2 a:hover {
  color: #00B7F1;
}

.block_text h3 {
  font-size: 1.125rem;
  text-transform: uppercase;
  font-weight: 400;
}

@media screen and (min-width: 768px) {
  .block_text h3 {
    font-size: 1.3125rem;
  }
}

.block_text p {
  font-size: 1.125rem;
  margin-bottom: 1em;
  line-height: 1.14286em;
}

@media screen and (min-width: 768px) {
  .block_text p {
    font-size: 1.3125rem;
  }
}

.block_text img {
  width: 100%;
  height: auto;
  display: block;
}

.block_carousel {
  margin-bottom: 60px;
}

.block_carousel .carousel {
  position: relative;
}

.block_carousel .carousel .owl-nav button.owl-prev, .block_carousel .carousel .owl-nav button.owl-next {
  width: 30px;
  height: 30px;
  position: absolute;
  top: 50%;
  background: rgba(0, 183, 241, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  margin: 0;
}

.block_carousel .carousel .owl-nav button.owl-prev {
  left: 0;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.block_carousel .carousel .owl-nav button.owl-next {
  right: 0;
  -webkit-transform: translate(50%, -50%);
          transform: translate(50%, -50%);
}

.block_carousel .carousel .owl-nav button, .block_carousel .carousel .owl-nav button:active, .block_carousel .carousel .owl-nav button:focus {
  border: 0;
  outline: none;
}

.block_carousel .carousel .owl-dots {
  position: absolute;
  left: 50%;
  bottom: 0;
  -webkit-transform: translate(-50%, 100%);
          transform: translate(-50%, 100%);
  padding: 20px 0 0;
}

.frontpage_wrapper {
  min-height: calc(100vh - 80px);
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.frontpage_inner {
  width: 100%;
  background: rgba(0, 0, 0, 0.75);
  margin-bottom: 40px;
  padding: 30px 0;
}

.frontpage_content {
  width: 100%;
  max-width: 1440px;
  margin-right: auto;
  margin-left: auto;
  padding: 0 20px;
  color: #FFFFFF;
  font-size: 2rem;
  font-weight: 700;
  text-align: center;
}

.frontpage_content img {
  display: block;
}

.frontpage_content img.alignleft {
  float: left;
}

.frontpage_content img.alignright {
  float: right;
}

.frontpage_content img.aligncenter {
  display: block;
  margin: auto;
}

.frontpage_scroll {
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 20px;
}

.frontpage_scroll span {
  position: absolute;
  left: -999999px;
}

.frontpage_scroll svg {
  width: 33px;
  height: 18px;
  display: block;
  fill: #FFDA00;
  margin: auto;
  -webkit-transition: fill 0.25s;
  transition: fill 0.25s;
}

.frontpage_scroll:hover svg {
  fill: #FFFFFF;
}

@media screen and (min-width: 768px) {
  .frontpage_scroll svg {
    width: 66px;
    height: 35px;
  }
}

@media screen and (min-width: 1024px) {
  .frontpage_scroll {
    bottom: 40px;
  }
}

@media screen and (min-width: 1200px) {
  .frontpage_scroll {
    bottom: 82px;
  }
}

@media screen and (min-width: 768px) {
  .frontpage_wrapper {
    min-height: calc(100vh - 93px);
  }
  .frontpage_inner {
    padding: 40px;
    margin-bottom: 46.5px;
  }
  .frontpage_content {
    font-size: 3rem;
  }
}

@media screen and (min-width: 1024px) {
  .frontpage_wrapper {
    min-height: calc(100vh - 108px);
  }
  .frontpage_inner {
    margin-bottom: 54px;
  }
  .frontpage_content {
    font-size: 3.5rem;
  }
}

.frontpage_section {
  padding: 50px 0;
}

.frontpage_section.bg_yellow {
  background-color: #FFDA00;
}

.frontpage_section.bg_blue {
  background-color: #00B7F1;
}

.frontpage_section.bg_red {
  background-color: #EE202E;
}

.frontpage_section.bg_gray_10 {
  background-color: #E8E5E2;
}

.frontpage_section.bg_gray_50 {
  background-color: #898C8E;
}

.frontpage_section.bg_gray_90 {
  background-color: #434345;
}

.frontpage_section.bg_white {
  background-color: #FFFFFF;
}

.frontpage_section.bg_black {
  background-color: #000000;
}

.frontpage_section_inner {
  width: 100%;
  max-width: 1440px;
  margin-right: auto;
  margin-left: auto;
  padding: 0 20px;
}

.frontpage_section_inner img {
  display: block;
}

.frontpage_section_inner img.alignleft {
  float: left;
}

.frontpage_section_inner img.alignright {
  float: right;
}

.frontpage_section_inner img.aligncenter {
  display: block;
  margin: auto;
}

.frontpage_section_inner:after {
  height: 0;
  clear: both;
  content: "";
  display: table;
}

.frontpage_section_inner p {
  font-size: 1.125rem;
  margin-bottom: 1em;
  line-height: 1.14286em;
}

@media screen and (min-width: 768px) {
  .frontpage_section_inner p {
    font-size: 1.3125rem;
  }
}

.frontpage_section_inner p.mini {
  max-width: 620px;
}

.frontpage_section_inner img {
  max-width: 100%;
  height: auto;
}

.frontpage_section_inner a {
  color: rgba(0, 0, 0, 0.8);
  text-decoration: none;
}

.frontpage_section_inner a:hover {
  color: #00B7F1;
}

.news_title {
  font-size: 1.125rem;
  font-weight: 700;
  text-transform: uppercase;
}

@media screen and (min-width: 768px) {
  .news_title {
    font-size: 1.3125rem;
  }
}

.news_post {
  font-size: 1.125rem;
  margin-bottom: 1em;
}

@media screen and (min-width: 768px) {
  .news_post {
    font-size: 1.3125rem;
  }
}

.news_post h1 {
  font-size: 1.125rem;
  margin-bottom: 1em;
}

@media screen and (min-width: 768px) {
  .news_post h1 {
    font-size: 1.3125rem;
  }
}

.news_post h1 a {
  color: #000000;
  text-decoration: none;
}

.news_post h1 a:hover {
  color: #00B7F1;
}

.news_post main p {
  font-size: 1.125rem;
  margin-bottom: 1em;
  line-height: 1.14286em;
}

@media screen and (min-width: 768px) {
  .news_post main p {
    font-size: 1.3125rem;
  }
}

.news_post main img {
  width: 100%;
  height: auto;
  display: block;
}

.news_date {
  font-weight: 700;
}

.project_listing .project {
  margin-bottom: 15px;
  position: relative;
}

.project_listing .project figure {
  position: relative;
  z-index: 0;
}

.project_listing .project img {
  width: 100%;
  height: auto;
  display: block;
}

.project_listing .project .project-title {
  background-color: #FFDA00;
  -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
          order: 1;
  padding: 10px;
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

.project_listing .project h2 {
  font-size: 2rem;
  font-weight: 700;
}

.project_listing .project a {
  color: black;
  text-decoration: none;
}

@media screen and (max-width: 767px) {
  .project_listing .project a {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

@media screen and (min-width: 768px) {
  .project_listing {
    display: grid;
    grid-gap: 15px;
    grid-template-columns: auto auto;
    grid-template-rows: auto;
  }
  .project_listing .project {
    margin: 0;
    overflow: hidden;
  }
  .project_listing .project .project-title {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    background: rgba(255, 218, 0, 0.7);
    opacity: 0;
    text-align: center;
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
    z-index: 10;
  }
  .project_listing .project a:hover .project-title {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
  }
  .project_listing .project h2 {
    font-size: 2.625rem;
  }
  .project_listing .project a {
    width: 100%;
    height: 100%;
    display: block;
  }
}

@media screen and (min-width: 1024px) {
  .project_listing {
    grid-template-columns: auto auto auto;
  }
}

/*
 *  Owl Carousel - Core
 */
.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden;
  /* fix firefox animation glitch */
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-wrapper,
.owl-carousel .owl-item {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
}

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel .owl-nav button.owl-prev,
.owl-carousel .owl-nav button.owl-next,
.owl-carousel button.owl-dot {
  background: none;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  opacity: 0;
  display: block;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden;
}

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */
.no-js .owl-carousel {
  display: block;
}

/*
 *  Owl Carousel - Animate Plugin
 */
.owl-carousel .animated {
  -webkit-animation-duration: 1000ms;
          animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeOut {
  -webkit-animation-name: fadeOut;
          animation-name: fadeOut;
}

@-webkit-keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */
.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */
.owl-carousel .owl-item {
  /**
			This is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong
			calculation of the height of the owl-item that breaks page layouts
		 */
}

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item .owl-lazy[src^=""], .owl-carousel .owl-item .owl-lazy:not([src]) {
  max-height: 0;
}

.owl-carousel .owl-item img.owl-lazy {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */
.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 80px;
  width: 80px;
  left: 50%;
  top: 50%;
  margin-left: -40px;
  margin-top: -40px;
  background: url("owl.video.play.png") no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transition: -webkit-transform 100ms ease;
  transition: -webkit-transform 100ms ease;
  transition: transform 100ms ease;
  transition: transform 100ms ease, -webkit-transform 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transform: scale(1.3, 1.3);
          transform: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%;
}

/*
 * 	Default theme - Owl Carousel CSS File
 */
.owl-theme .owl-nav {
  margin-top: 10px;
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-nav [class*='owl-'] {
  color: #FFF;
  font-size: 0.875rem;
  margin: 5px;
  padding: 4px 7px;
  background: #D6D6D6;
  display: inline-block;
  cursor: pointer;
  border-radius: 3px;
}

.owl-theme .owl-nav [class*='owl-']:hover {
  background: #869791;
  color: #FFF;
  text-decoration: none;
}

.owl-theme .owl-nav .disabled {
  opacity: 0.5;
  cursor: default;
}

.owl-theme .owl-nav.disabled + .owl-dots {
  margin-top: 10px;
}

.owl-theme .owl-dots {
  text-align: center;
  -webkit-tap-highlight-color: transparent;
}

.owl-theme .owl-dots .owl-dot {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

.owl-theme .owl-dots .owl-dot span {
  width: 10px;
  height: 10px;
  margin: 5px 7px;
  background: #D6D6D6;
  display: block;
  -webkit-backface-visibility: visible;
  -webkit-transition: opacity 200ms ease;
  transition: opacity 200ms ease;
  border-radius: 30px;
}

.owl-theme .owl-dots .owl-dot.active span, .owl-theme .owl-dots .owl-dot:hover span {
  background: #869791;
}

/*# sourceMappingURL=data:application/json;base64, */